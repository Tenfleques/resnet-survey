{"version":3,"sources":["Stage/Select.js","Stage/Image.js","Stage/Stage.js","App.js","serviceWorker.js","index.js"],"names":["Select","props","className","htmlFor","name","select","caption","onChange","id","defaultValue","value","options","map","v","i","key","label","Image","replace","Math","round","random","src","alt","onLoad","document","getElementById","classList","remove","revealOnSuccess","onError","contains","hideImageError","Stage","state","default_hp","JSON","parse","stringify","HyperParams","hyper_params","images","root","structures","resetVariables","bind","handleSelectChange","phase","collection","this","collectImageNames","length","console","log","setState","layers","cifar","test_images","train_images","metrics","base_train","base_test","across_structures_src_train","substring","across_structures_src_test","hp","push","is_image","v_name","split","test_image","src_train","train_image","train","test","selects","ev","target","selectedIndex","pkg","appname","description","onClick","renderHyperControls","stepBack","renderImageControl","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6a60eba.chunk.js","sourcesContent":["import React from 'react';\n\nconst Select = (props) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={props.name}>{props.select.caption}</label>\n            <select \n                className=\"form-control\" \n                onChange={props.onChange}\n                id={props.name}\n                name={props.name}\n                defaultValue={props.select.value}\n                >\n                {\n                    props.select.options.map((v,i) => {\n                        return <option key={i} value={v.value}>{v.label}</option>\n                    })\n                }\n            </select>\n        </div>\n    );    \n}\nexport default Select\n  \n  ","import React from 'react';\n\nfunction imageExists(image_url){\n    var http = new XMLHttpRequest();\n    http.open('HEAD', image_url, false);\n    http.send();\n\n    return http.status !== 404;\n\n}\nfunction hideImageError(id) {\n    let classlist = document.getElementById(id).classList \n    if (classlist.contains(\"d-none\"))\n        return \n    document.getElementById(id).classList += \" d-none\";\n}\n\nfunction revealOnSuccess(id){\n    document.getElementById(id).classList.remove(\"invisible\")\n    document.getElementById(id).classList.remove(\"d-none\")\n}\n\nconst Image = (props) => {\n    let id = \"image-block\" + props.name.replace(/[^\\w\\s\\_]/g, \"\").replace(/\\s+| /g, \"\") + Math.round(Math.random()*1000)\n    return (\n        <div id={id} className=\"col-12 invisible\">\n            <h6>{props.name}</h6>\n            <img className=\"img-thumbnail border-0 img-fluid  float-right\"  src={props.src} alt=\"\" onLoad={() => {revealOnSuccess(id) }} onError={()=> hideImageError(id)} />\n        </div>        \n    );    \n}\nexport default Image\n  \n  ","import React, { Component } from 'react';\nimport Select from \"./Select\"\nimport Image from \"./Image\"\nimport HyperParams from \"./hyper_params\"\nimport pkg from \"../Configs/package\"\n\n\nclass Stage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            default_hp : JSON.parse(JSON.stringify(HyperParams)),\n            hyper_params : JSON.parse(JSON.stringify(HyperParams)),\n            images : {\n                root : \"charts/\",\n                structures: \"structures/\"\n            }\n        }\n        this.resetVariables = this.resetVariables.bind(this)\n        this.handleSelectChange = this.handleSelectChange.bind(this)\n    }\n\n    renderImageControl(phase=\"train\"){\n        let collection = this.collectImageNames(this.state.images, this.state.hyper_params);\n        return collection[phase].length ? collection[phase] : collection[\"base_\" + phase]\n    }\n    resetVariables(){\n        console.log(this.state.default_hp);\n        this.setState({hyper_params : JSON.parse(JSON.stringify(this.state.default_hp))})\n    }\n    collectImageNames(images, hyper_params){\n        let root =  images.root \n                    + \"resnet-\" + hyper_params.layers.value + \"/\"\n                    + \"cifar-\" + hyper_params.cifar.value \n                    ;\n        let test_images = [];\n        let train_images = [];\n        let metrics = [\n                \"_loss_val_mean\",\n                \"_acc_val_mean\"\n            ];\n       \n        let base_train = [], base_test = [];\n\n        for (let i = 0; i < metrics.length; ++i){\n            let across_structures_src_train = images.structures \n                                + \"cifar-\" + hyper_params[\"cifar\"].value + \"/\"\n                                + \"train-20_50_56_62_110-\"\n                                + metrics[i].substring(1)\n            let across_structures_src_test = images.structures \n                                + \"cifar-\" + hyper_params[\"cifar\"].value + \"/\"\n                                + \"test-20_50_56_62_110-\"\n                                + metrics[i].substring(1)\n\n\n            base_train.push(<Image key={\"structure-cross-image\" + metrics[i]} src={across_structures_src_train + \".png\"} name={\"Train reference\"}/>);\n\n            base_test.push(<Image key={\"structure-cross-image\" + metrics[i]} src={across_structures_src_test + \".png\"} name={\"Test reference\"}/>);\n\n            for (let hp in hyper_params){\n                if(\n                    (hyper_params[hp].is_image ||  hyper_params[hp].value == 50 || hyper_params[hp].value == 62) \n                    && hyper_params[hp].value){\n                \n                    train_images.push(<Image key={\"structure-cross-image-hyper\" + metrics[i] + hp} src={across_structures_src_test + hyper_params[hp].value + \".png\"} name={\"@\" + hp + \" \" + hyper_params[hp].value }/>);\n\n                    test_images.push(<Image key={\"structure-cross-image-hyper\" + metrics[i] + hp} src={across_structures_src_test + hyper_params[hp].value + \".png\"} name={\"@ \" + hp + \" \" + hyper_params[hp].value }/>); \n\n                    \n                    \n                    let name = hyper_params[hp].value + metrics[i];\n                    if(hp == \"layers\"){\n                        if(hyper_params[hp].value == 50){\n                            name = \"-l50\" + metrics[i];\n                        }\n\n                        if (hyper_params[hp].value == 62){\n                            name = \"-l62\" + metrics[i];\n                        }\n                    }\n                    \n                    \n\n                    let src = root + \"-test_\" + name + \".png\"\n    \n                    let v_name = name.split(\"_\")[0]\n\n                    let test_image = <Image key={\"test-image-\" + i + hp} src={src} name={\"Test \" + v_name}/>\n                    test_images.push(test_image);\n\n\n                    let src_train = root + \"-train_\" + name + \".png\"\n\n                    v_name = name.split(\"_\")[0]\n    \n                    let train_image = <Image key ={\"train-image-\" + i + hp} src={src_train} name={\"Train \" + v_name}/>\n                    train_images.push(train_image);\n                } \n            }    \n        }    \n        return {\n            train :train_images,\n            test : test_images,\n            base_train,\n            base_test\n        }\n    }\n    renderHyperControls(){\n        let selects = []\n        for (var i in this.state.hyper_params){\n\n            selects.push(<Select \n                            key={\"select-\" + i} \n                            select={this.state.hyper_params[i]} \n                            onChange={this.handleSelectChange}\n                            name={i}\n                            />)\n        }\n        return selects;\n    }\n    handleSelectChange(ev){\n        let hyper_params = this.state.hyper_params;\n\n        hyper_params[ev.target.name].value = ev.target.options[ev.target.selectedIndex].value;\n\n        this.setState({hyper_params})\n    }\n    render() {\n    \n        return (\n            <div className=\"row\">\n                <div className=\"bg-primary col-12 pt-3\">\n                    <h3 className=\"col-12 text-white\">\n                        Hyper-parameter investigation for {pkg.appname}\n                    </h3>\n                    <p className=\"text-lead col-12 text-white\">\n                        {pkg.description}\n                    </p>\n                </div>\n                \n                <div className=\"knob-box col-12 col-md-6 col-lg-3 \">\n                    <button onClick={() => this.resetVariables()} className=\"btn btn-transparent border-primary col-12  my-3\">\n                        reset to reference\n                    </button>\n                    <div className=\"border-top py-3\">\n                        {this.renderHyperControls()}\n                    </div>\n                    \n                </div>\n                <div className=\"col-12 col-md-6 col-lg-9 \n                 mh-85 mh-md-85 y-scroll-auto\">\n                    <div className=\"row\">\n                        <div className={\"\" + \"invisible pr-5 col-12 text-right\"}>\n                            <button onClick={() => this.stepBack()} className=\"btn btn-transparent border-primary my-3 mr-4\">\n                                <span className=\"h5\">\n                                    &lt;\n                                </span>\n                            </button>\n                        </div>\n                        <div className=\"col-md-10 col-lg-6 pr-0\">\n                            {this.renderImageControl(\"train\")}\n                        </div> \n                        <div className=\"col-md-10 col-lg-6 pr-0\">\n                            {this.renderImageControl(\"test\")}\n                        </div>                        \n                    </div>\n                </div>                \n            </div>\n        )\n    }\n}\n\nexport default Stage;","import React, { Component } from 'react';\nimport Stage from \"./Stage/Stage\"\nimport './Css/bootstrap.css';\nimport './Css/App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App container-fluid\">\n        <Stage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}